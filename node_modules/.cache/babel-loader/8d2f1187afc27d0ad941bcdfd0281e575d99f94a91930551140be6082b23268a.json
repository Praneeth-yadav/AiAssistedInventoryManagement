{"ast":null,"code":"var _jsxFileName = \"/Users/praneetheraganaboina/Desktop/Learnings/AiAssistedInventoryManagement/src/components/CustomerService.js\",\n  _s = $RefreshSig$();\nimport { Button, Input, InputGroup, InputLeftAddon, Stack, Textarea, useToast } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Uploadimage } from \"./Uploadimage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CustomerService = () => {\n  _s();\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [decision, setDecision] = useState(\"\");\n  const toast = useToast();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleImageUpload = file => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const base64data = reader.result;\n      setImage(base64data); // Set the base64-encoded image in state\n    };\n\n    reader.readAsDataURL(file); // Convert the file to base64 format\n  };\n\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    const requestData = {\n      description,\n      image // Send the base64-encoded image data to the API\n    };\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/getDecision\", requestData);\n      setDecision(response.data.decision);\n      toast({\n        title: \"Success\",\n        description: \"Your request has been processed.\",\n        status: \"success\",\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error(\"Error getting decision:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to process your request.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      name: location.state.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 4,\n      maxWidth: \"500px\",\n      margin: \"auto\",\n      padding: \"20px\",\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          placeholder: \"Describe your issue here\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Uploadimage, {\n        onImageUpload: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: handleSubmit,\n        isLoading: isLoading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), decision && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Decision:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: decision\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CustomerService, \"18QomZuewNnXmyhaFAhBxgNVMZo=\", true, function () {\n  return [useToast];\n});\n_c = CustomerService;\nexport default CustomerService;\nvar _c;\n$RefreshReg$(_c, \"CustomerService\");","map":{"version":3,"names":["Button","Input","InputGroup","InputLeftAddon","Stack","Textarea","useToast","useState","axios","Uploadimage","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerService","_s","description","setDescription","image","setImage","isLoading","setIsLoading","decision","setDecision","toast","navigate","useNavigate","location","useLocation","handleImageUpload","file","reader","FileReader","onloadend","base64data","result","readAsDataURL","handleSubmit","requestData","response","post","data","title","status","duration","isClosable","error","console","children","Navbar","name","state","fileName","_jsxFileName","lineNumber","columnNumber","spacing","maxWidth","margin","padding","placeholder","value","onChange","e","target","onImageUpload","colorScheme","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["/Users/praneetheraganaboina/Desktop/Learnings/AiAssistedInventoryManagement/src/components/CustomerService.js"],"sourcesContent":["import {\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  Stack,\n  Textarea,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Uploadimage } from \"./Uploadimage\";\n\nexport const CustomerService = () => {\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [decision, setDecision] = useState(\"\");\n  const toast = useToast();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleImageUpload = (file) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const base64data = reader.result;\n      setImage(base64data); // Set the base64-encoded image in state\n    };\n    reader.readAsDataURL(file); // Convert the file to base64 format\n  };\n\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    const requestData = {\n      description,\n      image, // Send the base64-encoded image data to the API\n    };\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:5000/getDecision\",\n        requestData\n      );\n      setDecision(response.data.decision);\n      toast({\n        title: \"Success\",\n        description: \"Your request has been processed.\",\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error(\"Error getting decision:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to process your request.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Navbar name={location.state.name} />\n      <Stack spacing={4} maxWidth=\"500px\" margin=\"auto\" padding=\"20px\">\n        <InputGroup>\n          <InputLeftAddon children=\"Description\" />\n          <Textarea\n            placeholder=\"Describe your issue here\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </InputGroup>\n\n        <Uploadimage onImageUpload={handleImageUpload} />\n\n        <Button colorScheme=\"blue\" onClick={handleSubmit} isLoading={isLoading}>\n          Submit\n        </Button>\n\n        {decision && (\n          <div style={{ marginTop: \"20px\" }}>\n            <h3>Decision:</h3>\n            <p>{decision}</p>\n          </div>\n        )}\n      </Stack>\n    </>\n  );\n};\n\nexport default CustomerService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}