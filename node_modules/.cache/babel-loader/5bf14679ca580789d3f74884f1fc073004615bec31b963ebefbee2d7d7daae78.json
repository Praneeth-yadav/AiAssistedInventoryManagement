{"ast":null,"code":"// import {\n//   Button,\n//   Input,\n//   InputGroup,\n//   InputLeftAddon,\n//   Stack,\n// } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useState } from \"react\";\n// import StoresStyle from \"./Stores.module.css\";\n// import { Navbar } from \"./Navbar\";\n// import { useLocation } from \"react-router-dom\";\n\n// export function Stores({ setload }) {\n//   const location = useLocation();\n//   const [locationName, setLocationName] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [zipcode, setZipcode] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(() => {\n//     const loggedInUser = localStorage.getItem(\"authenticated\");\n//     console.log(\"loggedin\", location.state.name);\n\n//     if (loggedInUser) {\n//       setauthenticated(loggedInUser);\n//     } else {\n//       navigate(\"/\", { replace: true });\n//     }\n//     const fetchData = async () => {\n//       try {\n//         const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n//         console.log(\"result=\", res);\n//         setsearch(res.data);\n//         response.current = res.data;\n//         console.log(\"response=\", res.data);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     };\n//   const addLocation = async () => {\n//     const date = new Date().toISOString().split(\"T\")[0]; // Format YYYY-MM-DD\n\n//     const locationData = {\n//       locationName,\n//       address,\n//       city,\n//       zipcode,\n//       createdDate: date,\n//       addedBy: \"Admin\",\n//     };\n\n//     try {\n//       setIsLoading(true);\n//       const response = await axios.post(\n//         \"http://127.0.0.1:5000/addLocation\",\n//         locationData\n//       );\n//       console.log(\"Location added:\", response.data);\n//       setload(true);\n//       setIsLoading(false);\n//     } catch (e) {\n//       console.log(\"New location cannot be added\", e);\n//       setIsLoading(false);\n//       alert(\"Error: Location could not be added.\");\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className={StoresStyle.content}>\n//         <Navbar name={location.state?.name || \"Guest\"} />\n//         <div className={StoresStyle.locationinput}>\n//           <Stack spacing={4}>\n//             <InputGroup>\n//               <InputLeftAddon children=\"Location Name\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter location name\"\n//                 value={locationName}\n//                 onChange={(e) => setLocationName(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Address\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter address\"\n//                 value={address}\n//                 onChange={(e) => setAddress(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"City\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter city\"\n//                 value={city}\n//                 onChange={(e) => setCity(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Zipcode\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter zipcode\"\n//                 value={zipcode}\n//                 onChange={(e) => setZipcode(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <Button\n//               colorScheme=\"teal\"\n//               onClick={addLocation}\n//               isLoading={isLoading}\n//               isDisabled={!locationName || !address || !city || !zipcode}\n//             >\n//               Add Location\n//             </Button>\n//           </Stack>\n//         </div>\n//         <div className={dashboardStyle.itemsmod}>\n//         {search.map((data) => {\n//           // console.log(\"data=\", data.id);\n//           // console.log(\"data=\", data);\n//           return (\n//             <LocationDisplay\n//               key={data.id}\n//               className={dashboardStyle.item}\n//               props={data}\n//               name={location.state.name}\n//               setload={setload}\n//               load={load}\n//             />\n//           );\n//         })}\n//       </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// -----------------------\n// import {\n//   Button,\n//   Input,\n//   InputGroup,\n//   InputLeftAddon,\n//   Stack,\n// } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useState, useEffect } from \"react\";\n// import StoresStyle from \"./Stores.module.css\";\n// import dashboardStyle from \"./Dashboard.module.css\";\n// import { Navbar } from \"./Navbar\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { LocationDisplay } from \"./LocationDisplay\";\n\n// export function Stores({ setload }) {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const [locationName, setLocationName] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [zipcode, setZipcode] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [search, setSearch] = useState([]);\n//   const [authenticated, setAuthenticated] = useState(false);\n\n//   useEffect(() => {\n//     const loggedInUser = localStorage.getItem(\"authenticated\");\n\n//     if (loggedInUser) {\n//       setAuthenticated(true);\n//     } else {\n//       navigate(\"/\", { replace: true });\n//     }\n\n//     // Fetch all locations\n//     const fetchData = async () => {\n//       try {\n//         const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n//         console.log(\"Fetched locations:\", res.data);\n//         setSearch(res.data);\n//       } catch (e) {\n//         console.log(\"Error fetching locations:\", e);\n//       }\n//     };\n\n//     fetchData();\n//   }, [navigate]);\n\n//   const addLocation = async () => {\n//     const date = new Date().toISOString().split(\"T\")[0]; // Format YYYY-MM-DD\n\n//     const locationData = {\n//       locationName,\n//       address,\n//       city,\n//       zipcode,\n//       createdDate: date,\n//       addedBy: \"Admin\",\n//     };\n\n//     try {\n//       setIsLoading(true);\n//       const response = await axios.post(\n//         \"http://127.0.0.1:5000/addLocation\",\n//         locationData\n//       );\n//       console.log(\"Location added:\", response.data);\n\n//       // Refresh locations after adding a new one\n//       setSearch((prevLocations) => [...prevLocations, locationData]);\n//       //   setload(true);\n\n//       // Reset input fields\n//       setLocationName(\"\");\n//       setAddress(\"\");\n//       setCity(\"\");\n//       setZipcode(\"\");\n//       setIsLoading(false);\n//     } catch (e) {\n//       console.log(\"New location cannot be added\", e);\n//       setIsLoading(false);\n//       alert(\"Error: Location could not be added.\");\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className={StoresStyle.content}>\n//         <Navbar name={location.state?.name || \"Guest\"} />\n//         <div className={StoresStyle.locationinput}>\n//           <Stack spacing={4}>\n//             <InputGroup>\n//               <InputLeftAddon children=\"Location Name\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter location name\"\n//                 value={locationName}\n//                 onChange={(e) => setLocationName(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Address\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter address\"\n//                 value={address}\n//                 onChange={(e) => setAddress(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"City\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter city\"\n//                 value={city}\n//                 onChange={(e) => setCity(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Zipcode\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter zipcode\"\n//                 value={zipcode}\n//                 onChange={(e) => setZipcode(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <Button\n//               colorScheme=\"teal\"\n//               onClick={addLocation}\n//               isLoading={isLoading}\n//               isDisabled={!locationName || !address || !city || !zipcode}\n//             >\n//               Add Location\n//             </Button>\n//           </Stack>\n//         </div>\n\n//         {/* Display list of locations */}\n//         <div className={dashboardStyle.itemsmod}>\n//           {search.map((data, index) => (\n//             <LocationDisplay\n//               key={index}\n//               className={dashboardStyle.item}\n//               props={data}\n//               name={location.state?.name}\n//               //   setload={setload}\n//             />\n//           ))}\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n//-----------------","map":{"version":3,"names":[],"sources":["/Users/praneetheraganaboina/Desktop/Learnings/AiAssistedInventoryManagement/src/components/Stores.js"],"sourcesContent":["// import {\n//   Button,\n//   Input,\n//   InputGroup,\n//   InputLeftAddon,\n//   Stack,\n// } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useState } from \"react\";\n// import StoresStyle from \"./Stores.module.css\";\n// import { Navbar } from \"./Navbar\";\n// import { useLocation } from \"react-router-dom\";\n\n// export function Stores({ setload }) {\n//   const location = useLocation();\n//   const [locationName, setLocationName] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [zipcode, setZipcode] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(() => {\n//     const loggedInUser = localStorage.getItem(\"authenticated\");\n//     console.log(\"loggedin\", location.state.name);\n\n//     if (loggedInUser) {\n//       setauthenticated(loggedInUser);\n//     } else {\n//       navigate(\"/\", { replace: true });\n//     }\n//     const fetchData = async () => {\n//       try {\n//         const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n//         console.log(\"result=\", res);\n//         setsearch(res.data);\n//         response.current = res.data;\n//         console.log(\"response=\", res.data);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     };\n//   const addLocation = async () => {\n//     const date = new Date().toISOString().split(\"T\")[0]; // Format YYYY-MM-DD\n\n//     const locationData = {\n//       locationName,\n//       address,\n//       city,\n//       zipcode,\n//       createdDate: date,\n//       addedBy: \"Admin\",\n//     };\n\n//     try {\n//       setIsLoading(true);\n//       const response = await axios.post(\n//         \"http://127.0.0.1:5000/addLocation\",\n//         locationData\n//       );\n//       console.log(\"Location added:\", response.data);\n//       setload(true);\n//       setIsLoading(false);\n//     } catch (e) {\n//       console.log(\"New location cannot be added\", e);\n//       setIsLoading(false);\n//       alert(\"Error: Location could not be added.\");\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className={StoresStyle.content}>\n//         <Navbar name={location.state?.name || \"Guest\"} />\n//         <div className={StoresStyle.locationinput}>\n//           <Stack spacing={4}>\n//             <InputGroup>\n//               <InputLeftAddon children=\"Location Name\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter location name\"\n//                 value={locationName}\n//                 onChange={(e) => setLocationName(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Address\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter address\"\n//                 value={address}\n//                 onChange={(e) => setAddress(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"City\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter city\"\n//                 value={city}\n//                 onChange={(e) => setCity(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Zipcode\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter zipcode\"\n//                 value={zipcode}\n//                 onChange={(e) => setZipcode(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <Button\n//               colorScheme=\"teal\"\n//               onClick={addLocation}\n//               isLoading={isLoading}\n//               isDisabled={!locationName || !address || !city || !zipcode}\n//             >\n//               Add Location\n//             </Button>\n//           </Stack>\n//         </div>\n//         <div className={dashboardStyle.itemsmod}>\n//         {search.map((data) => {\n//           // console.log(\"data=\", data.id);\n//           // console.log(\"data=\", data);\n//           return (\n//             <LocationDisplay\n//               key={data.id}\n//               className={dashboardStyle.item}\n//               props={data}\n//               name={location.state.name}\n//               setload={setload}\n//               load={load}\n//             />\n//           );\n//         })}\n//       </div>\n//       </div>\n//     </>\n//   );\n// }\n\n\n// -----------------------\n// import {\n//   Button,\n//   Input,\n//   InputGroup,\n//   InputLeftAddon,\n//   Stack,\n// } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useState, useEffect } from \"react\";\n// import StoresStyle from \"./Stores.module.css\";\n// import dashboardStyle from \"./Dashboard.module.css\";\n// import { Navbar } from \"./Navbar\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { LocationDisplay } from \"./LocationDisplay\";\n\n// export function Stores({ setload }) {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const [locationName, setLocationName] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [zipcode, setZipcode] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [search, setSearch] = useState([]);\n//   const [authenticated, setAuthenticated] = useState(false);\n\n//   useEffect(() => {\n//     const loggedInUser = localStorage.getItem(\"authenticated\");\n\n//     if (loggedInUser) {\n//       setAuthenticated(true);\n//     } else {\n//       navigate(\"/\", { replace: true });\n//     }\n\n//     // Fetch all locations\n//     const fetchData = async () => {\n//       try {\n//         const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n//         console.log(\"Fetched locations:\", res.data);\n//         setSearch(res.data);\n//       } catch (e) {\n//         console.log(\"Error fetching locations:\", e);\n//       }\n//     };\n\n//     fetchData();\n//   }, [navigate]);\n\n//   const addLocation = async () => {\n//     const date = new Date().toISOString().split(\"T\")[0]; // Format YYYY-MM-DD\n\n//     const locationData = {\n//       locationName,\n//       address,\n//       city,\n//       zipcode,\n//       createdDate: date,\n//       addedBy: \"Admin\",\n//     };\n\n//     try {\n//       setIsLoading(true);\n//       const response = await axios.post(\n//         \"http://127.0.0.1:5000/addLocation\",\n//         locationData\n//       );\n//       console.log(\"Location added:\", response.data);\n\n//       // Refresh locations after adding a new one\n//       setSearch((prevLocations) => [...prevLocations, locationData]);\n//       //   setload(true);\n\n//       // Reset input fields\n//       setLocationName(\"\");\n//       setAddress(\"\");\n//       setCity(\"\");\n//       setZipcode(\"\");\n//       setIsLoading(false);\n//     } catch (e) {\n//       console.log(\"New location cannot be added\", e);\n//       setIsLoading(false);\n//       alert(\"Error: Location could not be added.\");\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className={StoresStyle.content}>\n//         <Navbar name={location.state?.name || \"Guest\"} />\n//         <div className={StoresStyle.locationinput}>\n//           <Stack spacing={4}>\n//             <InputGroup>\n//               <InputLeftAddon children=\"Location Name\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter location name\"\n//                 value={locationName}\n//                 onChange={(e) => setLocationName(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Address\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter address\"\n//                 value={address}\n//                 onChange={(e) => setAddress(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"City\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter city\"\n//                 value={city}\n//                 onChange={(e) => setCity(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Zipcode\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter zipcode\"\n//                 value={zipcode}\n//                 onChange={(e) => setZipcode(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <Button\n//               colorScheme=\"teal\"\n//               onClick={addLocation}\n//               isLoading={isLoading}\n//               isDisabled={!locationName || !address || !city || !zipcode}\n//             >\n//               Add Location\n//             </Button>\n//           </Stack>\n//         </div>\n\n//         {/* Display list of locations */}\n//         <div className={dashboardStyle.itemsmod}>\n//           {search.map((data, index) => (\n//             <LocationDisplay\n//               key={index}\n//               className={dashboardStyle.item}\n//               props={data}\n//               name={location.state?.name}\n//               //   setload={setload}\n//             />\n//           ))}\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n//-----------------\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}