{"ast":null,"code":"// import { Navbar } from \"./Navbar\";\n// import {\n//   Table,\n//   Thead,\n//   Tbody,\n//   Tfoot,\n//   Tr,\n//   Th,\n//   Td,\n//   TableCaption,\n//   TableContainer,\n//   Button,\n//   IconButton,\n//   Tooltip,\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   Heading,\n//   CardFooter,\n// } from \"@chakra-ui/react\";\n// import { DeleteIcon, CheckIcon } from \"@chakra-ui/icons\";\n// import { useRef, useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// import { useLocation, useNavigate } from \"react-router-dom\";\n\n// const CustomerServiceTab = () => {};\n// const Cartpage = () => {\n//   const total = useRef(0);\n//   total.current = 0;\n//   let response = {\n//   };\n\n//   const [responsefull, setresponsefull] = useState([]);\n//   const [load, setload] = useState(false);\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         axios.get(`http://127.0.0.1:5000/cart`).then((res) => {\n//           console.log(\"result=\", res.data);\n//           setresponsefull(res.data);\n//           console.log(\"response=\", res.data);\n//         });\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     };\n\n//     fetchData();\n//   }, [load]);\n\n//   const deleteitem = (item) => {\n//     console.log(\"item=\", item);\n//     const data = {\n//       item: item,\n//       username: location.state.name,\n//     };\n//     console.log(\"delete item    =   \", data);\n//     try {\n//       axios\n//         .delete(\"http://127.0.0.1:5000/cart\", {\n//           headers: {\n//             \"Content-Type\": \"application/json\", // Set the Content-Type header\n//           },\n//           data,\n//         })\n//         .then((response) => {\n//           console.log(response.data);\n//           setload(!load);\n//           console.log(\"before\", load);\n//           // setresponsefull((responsefull) => {\n//           //   return responsefull.filter((cartItem) => cartItem.item !== item);\n//           // });\n//         });\n//     } catch (e) {\n//       console.log(\"Item cannot be deleted from cart\", e);\n//     }\n//   };\n//   const location = useLocation();\n//   console.log(\"state in cart\", location);\n\n//   // const [showtotal, setshowtotal] = useState(false);\n//   // const goToCheckoutPage =(responsefull)=>{\n\n//   // }\n\n//   const Cart = () => {\n//     const navigate = useNavigate();\n//     if (location.state.name !== \"Admin\") {\n//       console.log(\"respomefull cart\", responsefull);\n//       response = responsefull.filter((data) => {\n//         return data.username === location.state.name;\n//       });\n//       console.log(\"response cart\", response);\n//       return (\n//         <>\n//           <TableContainer>\n//             <Table variant=\"simple\" size=\"sm\">\n//               <TableCaption>\n//                 <Button\n//                   colorScheme=\"blue\"\n//                   // onClick={() => {\n//                   //   // setshowtotal(true);\n//                   //   goToCheckoutPage(responsefull);\n//                   // }}\n//                   onClick={() => {\n//                     navigate(\n//                       \"/checkout\",\n//                       {\n//                         state: {\n//                           cartItems: responsefull,\n//                           name: location.state.name,\n//                         },\n//                       },\n//                       { replace: true }\n//                     );\n//                   }}\n//                 >\n//                   Proceed To Checkout\n//                 </Button>\n//               </TableCaption>\n//               <Thead>\n//                 <Tr>\n//                   <Th>Item</Th>\n//                   <Th>Quantity</Th>\n//                   <Th>Price/Unit</Th>\n//                   <Th>Total</Th>\n//                 </Tr>\n//               </Thead>\n//               <Tbody>\n//                 {response?.map((item) => {\n//                   const { data } = item;\n//                   console.log(\"data\", data);\n//                   total.current = 0;\n//                   data.map((data) => {\n//                     total.current += data.price * data.quantity;\n//                   });\n\n//                   return (\n//                     <>\n//                       {data.map((data) => (\n//                         <Tr>\n//                           <Td>{data.item}</Td>\n//                           <Td>{data.quantity}</Td>\n//                           <Td>${data.price}</Td>\n//                           <Td>${data.price * data.quantity}</Td>\n//                           <Td>\n//                             <Tooltip label=\"Delete Item\">\n//                               <IconButton\n//                                 onClick={() => deleteitem(data.item)}\n//                                 isRound={true}\n//                                 variant=\"outline\"\n//                                 colorScheme=\"red\"\n//                                 aria-label=\"Delete\"\n//                                 fontSize=\"20px\"\n//                                 icon={<DeleteIcon />}\n//                               />\n//                             </Tooltip>\n//                           </Td>\n//                         </Tr>\n//                       ))}\n//                     </>\n//                   );\n//                 })}\n//               </Tbody>\n//               <Tfoot>\n//                 <Tr>\n//                   <Th></Th>\n//                   <Th></Th>\n//                   <Th></Th>\n//                   {/* {showtotal && (\n//                     <h1>\n//                       <b>Total : {total.current}</b>\n//                     </h1>\n//                   )} */}\n//                   <Th></Th>\n//                 </Tr>\n//               </Tfoot>\n//             </Table>\n//           </TableContainer>\n//         </>\n//       );\n//     } else {\n//       return (\n//         <>\n//           {responsefull.map((resp) => {\n//             console.log(\"resp\", resp);\n//             total.current = 0;\n//             return (\n//               <Card key={resp.username}>\n//                 <CardHeader>\n//                   <Heading size=\"md\">{resp.username} Order</Heading>\n//                 </CardHeader>\n//                 <CardBody>\n//                   <TableContainer>\n//                     <Table variant=\"simple\" size=\"sm\">\n//                       <Thead>\n//                         <Tr>\n//                           <Th>Item</Th>\n//                           <Th>Quantity</Th>\n//                           <Th>Price/Unit</Th>\n//                           <Th>Total</Th>\n//                         </Tr>\n//                       </Thead>\n//                       <Tbody>\n//                         {resp.data.map((data) => {\n//                           total.current =\n//                             total.current + data.price * data.quantity;\n//                           return (\n//                             <>\n//                               <Tr>\n//                                 <Td>{data.item}</Td>\n//                                 <Td>{data.quantity}</Td>\n//                                 <Td>${data.price}</Td>\n//                                 <Td>${data.price * data.quantity}</Td>\n//                               </Tr>\n//                             </>\n//                           );\n//                         })}\n//                       </Tbody>\n//                       <Tfoot>\n//                         <Tr>\n//                           <Th></Th>\n//                           <Th></Th>\n//                           <Th></Th>\n//                           <Th>\n//                             <h1>{/* <b>Total : {total.current}</b> */}</h1>\n//                           </Th>\n//                           <Th></Th>\n//                         </Tr>\n//                       </Tfoot>\n//                     </Table>\n//                   </TableContainer>\n//                 </CardBody>\n//               </Card>\n//             );\n//           })}\n//         </>\n//       );\n//     }\n//   };\n//   return (\n//     <>\n//       <Navbar name={location.state.name} />\n//       <div>\n//         <CustomerServiceTab />\n//       </div>\n//     </>\n//   );\n// };\n// export default Cartpage;","map":{"version":3,"names":[],"sources":["/Users/praneetheraganaboina/Desktop/Learnings/AiAssistedInventoryManagement/src/components/CustomerService.js"],"sourcesContent":["// import { Navbar } from \"./Navbar\";\n// import {\n//   Table,\n//   Thead,\n//   Tbody,\n//   Tfoot,\n//   Tr,\n//   Th,\n//   Td,\n//   TableCaption,\n//   TableContainer,\n//   Button,\n//   IconButton,\n//   Tooltip,\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   Heading,\n//   CardFooter,\n// } from \"@chakra-ui/react\";\n// import { DeleteIcon, CheckIcon } from \"@chakra-ui/icons\";\n// import { useRef, useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// import { useLocation, useNavigate } from \"react-router-dom\";\n\n// const CustomerServiceTab = () => {};\n// const Cartpage = () => {\n//   const total = useRef(0);\n//   total.current = 0;\n//   let response = {\n//   };\n\n//   const [responsefull, setresponsefull] = useState([]);\n//   const [load, setload] = useState(false);\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         axios.get(`http://127.0.0.1:5000/cart`).then((res) => {\n//           console.log(\"result=\", res.data);\n//           setresponsefull(res.data);\n//           console.log(\"response=\", res.data);\n//         });\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     };\n\n//     fetchData();\n//   }, [load]);\n\n//   const deleteitem = (item) => {\n//     console.log(\"item=\", item);\n//     const data = {\n//       item: item,\n//       username: location.state.name,\n//     };\n//     console.log(\"delete item    =   \", data);\n//     try {\n//       axios\n//         .delete(\"http://127.0.0.1:5000/cart\", {\n//           headers: {\n//             \"Content-Type\": \"application/json\", // Set the Content-Type header\n//           },\n//           data,\n//         })\n//         .then((response) => {\n//           console.log(response.data);\n//           setload(!load);\n//           console.log(\"before\", load);\n//           // setresponsefull((responsefull) => {\n//           //   return responsefull.filter((cartItem) => cartItem.item !== item);\n//           // });\n//         });\n//     } catch (e) {\n//       console.log(\"Item cannot be deleted from cart\", e);\n//     }\n//   };\n//   const location = useLocation();\n//   console.log(\"state in cart\", location);\n\n//   // const [showtotal, setshowtotal] = useState(false);\n//   // const goToCheckoutPage =(responsefull)=>{\n\n//   // }\n\n//   const Cart = () => {\n//     const navigate = useNavigate();\n//     if (location.state.name !== \"Admin\") {\n//       console.log(\"respomefull cart\", responsefull);\n//       response = responsefull.filter((data) => {\n//         return data.username === location.state.name;\n//       });\n//       console.log(\"response cart\", response);\n//       return (\n//         <>\n//           <TableContainer>\n//             <Table variant=\"simple\" size=\"sm\">\n//               <TableCaption>\n//                 <Button\n//                   colorScheme=\"blue\"\n//                   // onClick={() => {\n//                   //   // setshowtotal(true);\n//                   //   goToCheckoutPage(responsefull);\n//                   // }}\n//                   onClick={() => {\n//                     navigate(\n//                       \"/checkout\",\n//                       {\n//                         state: {\n//                           cartItems: responsefull,\n//                           name: location.state.name,\n//                         },\n//                       },\n//                       { replace: true }\n//                     );\n//                   }}\n//                 >\n//                   Proceed To Checkout\n//                 </Button>\n//               </TableCaption>\n//               <Thead>\n//                 <Tr>\n//                   <Th>Item</Th>\n//                   <Th>Quantity</Th>\n//                   <Th>Price/Unit</Th>\n//                   <Th>Total</Th>\n//                 </Tr>\n//               </Thead>\n//               <Tbody>\n//                 {response?.map((item) => {\n//                   const { data } = item;\n//                   console.log(\"data\", data);\n//                   total.current = 0;\n//                   data.map((data) => {\n//                     total.current += data.price * data.quantity;\n//                   });\n\n//                   return (\n//                     <>\n//                       {data.map((data) => (\n//                         <Tr>\n//                           <Td>{data.item}</Td>\n//                           <Td>{data.quantity}</Td>\n//                           <Td>${data.price}</Td>\n//                           <Td>${data.price * data.quantity}</Td>\n//                           <Td>\n//                             <Tooltip label=\"Delete Item\">\n//                               <IconButton\n//                                 onClick={() => deleteitem(data.item)}\n//                                 isRound={true}\n//                                 variant=\"outline\"\n//                                 colorScheme=\"red\"\n//                                 aria-label=\"Delete\"\n//                                 fontSize=\"20px\"\n//                                 icon={<DeleteIcon />}\n//                               />\n//                             </Tooltip>\n//                           </Td>\n//                         </Tr>\n//                       ))}\n//                     </>\n//                   );\n//                 })}\n//               </Tbody>\n//               <Tfoot>\n//                 <Tr>\n//                   <Th></Th>\n//                   <Th></Th>\n//                   <Th></Th>\n//                   {/* {showtotal && (\n//                     <h1>\n//                       <b>Total : {total.current}</b>\n//                     </h1>\n//                   )} */}\n//                   <Th></Th>\n//                 </Tr>\n//               </Tfoot>\n//             </Table>\n//           </TableContainer>\n//         </>\n//       );\n//     } else {\n//       return (\n//         <>\n//           {responsefull.map((resp) => {\n//             console.log(\"resp\", resp);\n//             total.current = 0;\n//             return (\n//               <Card key={resp.username}>\n//                 <CardHeader>\n//                   <Heading size=\"md\">{resp.username} Order</Heading>\n//                 </CardHeader>\n//                 <CardBody>\n//                   <TableContainer>\n//                     <Table variant=\"simple\" size=\"sm\">\n//                       <Thead>\n//                         <Tr>\n//                           <Th>Item</Th>\n//                           <Th>Quantity</Th>\n//                           <Th>Price/Unit</Th>\n//                           <Th>Total</Th>\n//                         </Tr>\n//                       </Thead>\n//                       <Tbody>\n//                         {resp.data.map((data) => {\n//                           total.current =\n//                             total.current + data.price * data.quantity;\n//                           return (\n//                             <>\n//                               <Tr>\n//                                 <Td>{data.item}</Td>\n//                                 <Td>{data.quantity}</Td>\n//                                 <Td>${data.price}</Td>\n//                                 <Td>${data.price * data.quantity}</Td>\n//                               </Tr>\n//                             </>\n//                           );\n//                         })}\n//                       </Tbody>\n//                       <Tfoot>\n//                         <Tr>\n//                           <Th></Th>\n//                           <Th></Th>\n//                           <Th></Th>\n//                           <Th>\n//                             <h1>{/* <b>Total : {total.current}</b> */}</h1>\n//                           </Th>\n//                           <Th></Th>\n//                         </Tr>\n//                       </Tfoot>\n//                     </Table>\n//                   </TableContainer>\n//                 </CardBody>\n//               </Card>\n//             );\n//           })}\n//         </>\n//       );\n//     }\n//   };\n//   return (\n//     <>\n//       <Navbar name={location.state.name} />\n//       <div>\n//         <CustomerServiceTab />\n//       </div>\n//     </>\n//   );\n// };\n// export default Cartpage;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}