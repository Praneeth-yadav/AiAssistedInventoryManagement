{"ast":null,"code":"// import {\n//   Button,\n//   ButtonGroup,\n//   Card,\n//   CardBody,\n//   CardFooter,\n//   Divider,\n//   Heading,\n//   Stack,\n//   Text,\n// } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import locationStyle from \"./LocationDisplay.module.css\";\n\n// export const LocationDisplay = ({ props, name, load }) => {\n//   //   const navigate = useNavigate();\n\n//   const deleteLocation = async () => {\n//     try {\n//       const response = await axios.delete(\n//         \"http://127.0.0.1:5000/deleteLocation\",\n//         {\n//           headers: { \"Content-Type\": \"application/json\" },\n//           data: {\n//             locationName: props.locationName,\n//             city: props.city,\n//             zipcode: props.zipcode,\n//           },\n//         }\n//       );\n\n//       console.log(\"Location deleted:\", response.data);\n//       //   setload(!load); // Trigger reload of locations\n//     } catch (error) {\n//       console.error(\"Location could not be deleted:\", error);\n//     }\n//   };\n\n//   return (\n//     <Card maxW=\"sm\" className={locationStyle.locationCard}>\n//       <CardBody>\n//         <Stack mt=\"6\" spacing=\"3\">\n//           <Heading size=\"md\">{props.locationName}</Heading>\n//           <Text>{props.address}</Text>\n//           <Text>{props.city}</Text>\n//           <Text>{props.zipcode}</Text>\n//         </Stack>\n//       </CardBody>\n//       <Divider />\n//       <CardFooter>\n//         <ButtonGroup spacing=\"2\">\n//           <Button variant=\"ghost\" colorScheme=\"red\" onClick={deleteLocation}>\n//             Delete Location\n//           </Button>\n//         </ButtonGroup>\n//       </CardFooter>\n//     </Card>\n//   );\n// };","map":{"version":3,"names":[],"sources":["/Users/praneetheraganaboina/Desktop/Learnings/AiAssistedInventoryManagement/src/components/LocationDisplay.js"],"sourcesContent":["// import {\n//   Button,\n//   ButtonGroup,\n//   Card,\n//   CardBody,\n//   CardFooter,\n//   Divider,\n//   Heading,\n//   Stack,\n//   Text,\n// } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import locationStyle from \"./LocationDisplay.module.css\";\n\n// export const LocationDisplay = ({ props, name, load }) => {\n//   //   const navigate = useNavigate();\n\n//   const deleteLocation = async () => {\n//     try {\n//       const response = await axios.delete(\n//         \"http://127.0.0.1:5000/deleteLocation\",\n//         {\n//           headers: { \"Content-Type\": \"application/json\" },\n//           data: {\n//             locationName: props.locationName,\n//             city: props.city,\n//             zipcode: props.zipcode,\n//           },\n//         }\n//       );\n\n//       console.log(\"Location deleted:\", response.data);\n//       //   setload(!load); // Trigger reload of locations\n//     } catch (error) {\n//       console.error(\"Location could not be deleted:\", error);\n//     }\n//   };\n\n//   return (\n//     <Card maxW=\"sm\" className={locationStyle.locationCard}>\n//       <CardBody>\n//         <Stack mt=\"6\" spacing=\"3\">\n//           <Heading size=\"md\">{props.locationName}</Heading>\n//           <Text>{props.address}</Text>\n//           <Text>{props.city}</Text>\n//           <Text>{props.zipcode}</Text>\n//         </Stack>\n//       </CardBody>\n//       <Divider />\n//       <CardFooter>\n//         <ButtonGroup spacing=\"2\">\n//           <Button variant=\"ghost\" colorScheme=\"red\" onClick={deleteLocation}>\n//             Delete Location\n//           </Button>\n//         </ButtonGroup>\n//       </CardFooter>\n//     </Card>\n//   );\n// };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}