{"ast":null,"code":"// import { Navbar } from \"./Navbar\";\n// import {\n//   Table,\n//   Thead,\n//   Tbody,\n//   Tfoot,\n//   Tr,\n//   Th,\n//   Td,\n//   TableCaption,\n//   TableContainer,\n//   Button,\n//   IconButton,\n//   Tooltip,\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   Heading,\n//   FormControl,\n//   FormLabel,\n//   Input,\n//   Textarea,\n//   VStack,\n//   useToast,\n// } from \"@chakra-ui/react\";\n// import { DeleteIcon } from \"@chakra-ui/icons\";\n// import { useRef, useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useLocation } from \"react-router-dom\";\n\n// const Checkout = () => {\n//   const total = useRef(0);\n//   total.current = 0;\n\n//   const location = useLocation();\n//   const cartItems = location.state?.cartItems || []; // Get cart items from location state\n//   const [load, setLoad] = useState(false);\n//   const [billingDetails, setBillingDetails] = useState({\n//     name: \"\",\n//     address: \"\",\n//     city: \"\",\n//     state: \"\",\n//     zip: \"\",\n//     country: \"\",\n//   });\n//   const toast = useToast();\n\n//   const deleteItem = (item) => {\n//     console.log(\"item=\", item);\n//     const data = {\n//       item: item,\n//       username: location.state.name,\n//     };\n//     console.log(\"delete item =\", data);\n//     try {\n//       axios\n//         .delete(\"http://127.0.0.1:5000/cart\", {\n//           headers: {\n//             \"Content-Type\": \"application/json\", // Set the Content-Type header\n//           },\n//           data,\n//         })\n//         .then((response) => {\n//           console.log(response.data);\n//           setLoad(!load);\n//         });\n//     } catch (e) {\n//       console.log(\"Item cannot be deleted from cart\", e);\n//     }\n//   };\n\n//   const handleBillingChange = (e) => {\n//     const { name, value } = e.target;\n//     setBillingDetails((prevDetails) => ({ ...prevDetails, [name]: value }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       console.log(\"cartItems :\" + cartItems);\n//       const orderDetails = {\n//         items: cartItems,\n//         billing: billingDetails,\n//         username: location.state.name,\n//       };\n\n//       const response = await axios.post(\n//         \"http://127.0.0.1:5000/orders\",\n//         orderDetails\n//       );\n//       toast({\n//         title: \"Order placed.\",\n//         description: \"Your order has been successfully placed!\",\n//         status: \"success\",\n//         duration: 5000,\n//         isClosable: true,\n//       });\n//       console.log(response.data);\n//     } catch (error) {\n//       console.error(\"Error placing order:\", error);\n//       toast({\n//         title: \"Error.\",\n//         description: \"There was an issue placing your order.\",\n//         status: \"error\",\n//         duration: 5000,\n//         isClosable: true,\n//       });\n//     }\n//   };\n\n//   const Cart = () => {\n//     const username = location.state.name;\n//     const userCartItems = cartItems.filter(\n//       (item) => item.username === username\n//     );\n\n//     return (\n//       <>\n//         <TableContainer>\n//           <Table variant=\"simple\" size=\"sm\">\n//             {/* <TableCaption>\n//               <Button colorScheme=\"blue\" onClick={handleSubmit}>\n//                 Proceed To Checkout\n//               </Button>\n//             </TableCaption> */}\n//             <Thead>\n//               <Tr>\n//                 <Th>Item</Th>\n//                 <Th>Quantity</Th>\n//                 <Th>Price/Unit</Th>\n//                 <Th>Total</Th>\n//                 <Th>Actions</Th>\n//               </Tr>\n//             </Thead>\n//             <Tbody>\n//               {userCartItems.map((item) => {\n//                 const { data } = item;\n//                 total.current = 0;\n//                 {\n//                   console.log(\"Data in Checkout \", data);\n//                 }\n//                 data.forEach((product) => {\n//                   total.current += product.price * product.quantity;\n//                 });\n\n//                 return (\n//                   <Tr key={item.id}>\n//                     {data.map((product) => (\n//                       <Tr key={product.id}>\n//                         <Td>{product.item}</Td>\n//                         <Td>{product.quantity}</Td>\n//                         <Td>${product.price}</Td>\n//                         <Td>\n//                           ${(product.price * product.quantity).toFixed(2)}\n//                         </Td>\n//                         <Td>\n//                           <Tooltip label=\"Delete Item\">\n//                             <IconButton\n//                               onClick={() => deleteItem(product.item)}\n//                               isRound={true}\n//                               variant=\"outline\"\n//                               colorScheme=\"red\"\n//                               aria-label=\"Delete\"\n//                               fontSize=\"20px\"\n//                               icon={<DeleteIcon />}\n//                             />\n//                           </Tooltip>\n//                         </Td>\n//                       </Tr>\n//                     ))}\n//                   </Tr>\n//                 );\n//               })}\n//             </Tbody>\n//             <Tfoot>\n//               <Tr>\n//                 <Th></Th>\n//                 <Th></Th>\n//                 <Th></Th>\n//                 <Th>\n//                   <h1>\n//                     <b>Total : ${total.current.toFixed(2)}</b>\n//                   </h1>\n//                 </Th>\n//                 <Th></Th>\n//               </Tr>\n//             </Tfoot>\n//           </Table>\n//         </TableContainer>\n\n//         {/* Billing Details Form */}\n//         <VStack as=\"form\" spacing={4} onSubmit={handleSubmit} mt={4}>\n//           <FormControl isRequired>\n//             <FormLabel>Name</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"name\"\n//               value={billingDetails.name}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <FormControl isRequired>\n//             <FormLabel>Address</FormLabel>\n//             <Textarea\n//               name=\"address\"\n//               value={billingDetails.address}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <FormControl isRequired>\n//             <FormLabel>City</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"city\"\n//               value={billingDetails.city}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <FormControl isRequired>\n//             <FormLabel>State</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"state\"\n//               value={billingDetails.state}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <FormControl isRequired>\n//             <FormLabel>ZIP Code</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"zip\"\n//               value={billingDetails.zip}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <FormControl isRequired>\n//             <FormLabel>Country</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"country\"\n//               value={billingDetails.country}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <Button type=\"submit\" colorScheme=\"blue\">\n//             Place Order\n//           </Button>\n//         </VStack>\n//       </>\n//     );\n//   };\n\n//   return (\n//     <>\n//       <Navbar name={location.state.name} />\n//       <div>\n//         <Cart />\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Checkout;","map":{"version":3,"names":[],"sources":["/Users/praneetheraganaboina/Desktop/Learnings/AiAssistedInventoryManagement/src/components/Checkout.js"],"sourcesContent":["// import { Navbar } from \"./Navbar\";\n// import {\n//   Table,\n//   Thead,\n//   Tbody,\n//   Tfoot,\n//   Tr,\n//   Th,\n//   Td,\n//   TableCaption,\n//   TableContainer,\n//   Button,\n//   IconButton,\n//   Tooltip,\n//   Card,\n//   CardHeader,\n//   CardBody,\n//   Heading,\n//   FormControl,\n//   FormLabel,\n//   Input,\n//   Textarea,\n//   VStack,\n//   useToast,\n// } from \"@chakra-ui/react\";\n// import { DeleteIcon } from \"@chakra-ui/icons\";\n// import { useRef, useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useLocation } from \"react-router-dom\";\n\n// const Checkout = () => {\n//   const total = useRef(0);\n//   total.current = 0;\n\n//   const location = useLocation();\n//   const cartItems = location.state?.cartItems || []; // Get cart items from location state\n//   const [load, setLoad] = useState(false);\n//   const [billingDetails, setBillingDetails] = useState({\n//     name: \"\",\n//     address: \"\",\n//     city: \"\",\n//     state: \"\",\n//     zip: \"\",\n//     country: \"\",\n//   });\n//   const toast = useToast();\n\n//   const deleteItem = (item) => {\n//     console.log(\"item=\", item);\n//     const data = {\n//       item: item,\n//       username: location.state.name,\n//     };\n//     console.log(\"delete item =\", data);\n//     try {\n//       axios\n//         .delete(\"http://127.0.0.1:5000/cart\", {\n//           headers: {\n//             \"Content-Type\": \"application/json\", // Set the Content-Type header\n//           },\n//           data,\n//         })\n//         .then((response) => {\n//           console.log(response.data);\n//           setLoad(!load);\n//         });\n//     } catch (e) {\n//       console.log(\"Item cannot be deleted from cart\", e);\n//     }\n//   };\n\n//   const handleBillingChange = (e) => {\n//     const { name, value } = e.target;\n//     setBillingDetails((prevDetails) => ({ ...prevDetails, [name]: value }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       console.log(\"cartItems :\" + cartItems);\n//       const orderDetails = {\n//         items: cartItems,\n//         billing: billingDetails,\n//         username: location.state.name,\n//       };\n\n//       const response = await axios.post(\n//         \"http://127.0.0.1:5000/orders\",\n//         orderDetails\n//       );\n//       toast({\n//         title: \"Order placed.\",\n//         description: \"Your order has been successfully placed!\",\n//         status: \"success\",\n//         duration: 5000,\n//         isClosable: true,\n//       });\n//       console.log(response.data);\n//     } catch (error) {\n//       console.error(\"Error placing order:\", error);\n//       toast({\n//         title: \"Error.\",\n//         description: \"There was an issue placing your order.\",\n//         status: \"error\",\n//         duration: 5000,\n//         isClosable: true,\n//       });\n//     }\n//   };\n\n//   const Cart = () => {\n//     const username = location.state.name;\n//     const userCartItems = cartItems.filter(\n//       (item) => item.username === username\n//     );\n\n//     return (\n//       <>\n//         <TableContainer>\n//           <Table variant=\"simple\" size=\"sm\">\n//             {/* <TableCaption>\n//               <Button colorScheme=\"blue\" onClick={handleSubmit}>\n//                 Proceed To Checkout\n//               </Button>\n//             </TableCaption> */}\n//             <Thead>\n//               <Tr>\n//                 <Th>Item</Th>\n//                 <Th>Quantity</Th>\n//                 <Th>Price/Unit</Th>\n//                 <Th>Total</Th>\n//                 <Th>Actions</Th>\n//               </Tr>\n//             </Thead>\n//             <Tbody>\n//               {userCartItems.map((item) => {\n//                 const { data } = item;\n//                 total.current = 0;\n//                 {\n//                   console.log(\"Data in Checkout \", data);\n//                 }\n//                 data.forEach((product) => {\n//                   total.current += product.price * product.quantity;\n//                 });\n\n//                 return (\n//                   <Tr key={item.id}>\n//                     {data.map((product) => (\n//                       <Tr key={product.id}>\n//                         <Td>{product.item}</Td>\n//                         <Td>{product.quantity}</Td>\n//                         <Td>${product.price}</Td>\n//                         <Td>\n//                           ${(product.price * product.quantity).toFixed(2)}\n//                         </Td>\n//                         <Td>\n//                           <Tooltip label=\"Delete Item\">\n//                             <IconButton\n//                               onClick={() => deleteItem(product.item)}\n//                               isRound={true}\n//                               variant=\"outline\"\n//                               colorScheme=\"red\"\n//                               aria-label=\"Delete\"\n//                               fontSize=\"20px\"\n//                               icon={<DeleteIcon />}\n//                             />\n//                           </Tooltip>\n//                         </Td>\n//                       </Tr>\n//                     ))}\n//                   </Tr>\n//                 );\n//               })}\n//             </Tbody>\n//             <Tfoot>\n//               <Tr>\n//                 <Th></Th>\n//                 <Th></Th>\n//                 <Th></Th>\n//                 <Th>\n//                   <h1>\n//                     <b>Total : ${total.current.toFixed(2)}</b>\n//                   </h1>\n//                 </Th>\n//                 <Th></Th>\n//               </Tr>\n//             </Tfoot>\n//           </Table>\n//         </TableContainer>\n\n//         {/* Billing Details Form */}\n//         <VStack as=\"form\" spacing={4} onSubmit={handleSubmit} mt={4}>\n//           <FormControl isRequired>\n//             <FormLabel>Name</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"name\"\n//               value={billingDetails.name}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <FormControl isRequired>\n//             <FormLabel>Address</FormLabel>\n//             <Textarea\n//               name=\"address\"\n//               value={billingDetails.address}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <FormControl isRequired>\n//             <FormLabel>City</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"city\"\n//               value={billingDetails.city}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <FormControl isRequired>\n//             <FormLabel>State</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"state\"\n//               value={billingDetails.state}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <FormControl isRequired>\n//             <FormLabel>ZIP Code</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"zip\"\n//               value={billingDetails.zip}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <FormControl isRequired>\n//             <FormLabel>Country</FormLabel>\n//             <Input\n//               type=\"text\"\n//               name=\"country\"\n//               value={billingDetails.country}\n//               onChange={handleBillingChange}\n//             />\n//           </FormControl>\n//           <Button type=\"submit\" colorScheme=\"blue\">\n//             Place Order\n//           </Button>\n//         </VStack>\n//       </>\n//     );\n//   };\n\n//   return (\n//     <>\n//       <Navbar name={location.state.name} />\n//       <div>\n//         <Cart />\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Checkout;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}