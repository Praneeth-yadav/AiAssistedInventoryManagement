{"ast":null,"code":"var _jsxFileName = \"/Users/praneetheraganaboina/Desktop/Learnings/AiAssistedInventoryManagement/src/components/Uploadimage.js\",\n  _s = $RefreshSig$();\nimport { Button, Input, InputGroup } from \"@chakra-ui/react\";\nimport { storage } from \"./Firebase\";\nimport { ref, uploadBytes, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { useRef, useState } from \"react\";\nimport { color } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Uploadimage = ({\n  name,\n  imgurl\n}) => {\n  _s();\n  const [image, setimage] = useState(null);\n  console.log(\"name in image\", name);\n\n  // Create a storage reference from our storage service\n  // const storageRef = ref(storage, `images/${name}`);\n  const storageRef = ref(storage, `images/${name}`);\n  function upload() {\n    console.log(\"Upload image started!\");\n    if (image == null) {\n      return;\n    }\n    uploadBytes(storageRef, image).then(snapshot => {\n      console.log(\"Uploaded image!\");\n      console.log(\"snapshot\", snapshot);\n      getDownloadURL(snapshot.ref).then(downloadURL => {\n        console.log(\"File available at\", downloadURL);\n        imgurl(downloadURL);\n      });\n    }, error => {\n      // Handle unsuccessful uploads\n      console.log(\"error\", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(InputGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"file\",\n      onChange: e => {\n        setimage(e.target.files[0]);\n        //uploadImage();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"teal\",\n      onClick: upload,\n      children: \"upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Uploadimage, \"T9LWkZiZEII6DiRkpc7KlmrTyoU=\");\n_c = Uploadimage;\nvar _c;\n$RefreshReg$(_c, \"Uploadimage\");","map":{"version":3,"names":["Button","Input","InputGroup","storage","ref","uploadBytes","uploadBytesResumable","getDownloadURL","useRef","useState","color","jsxDEV","_jsxDEV","Uploadimage","name","imgurl","_s","image","setimage","console","log","storageRef","upload","then","snapshot","downloadURL","error","children","type","onChange","e","target","files","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","onClick","_c","$RefreshReg$"],"sources":["/Users/praneetheraganaboina/Desktop/Learnings/AiAssistedInventoryManagement/src/components/Uploadimage.js"],"sourcesContent":["import { Button, Input, InputGroup } from \"@chakra-ui/react\";\nimport { storage } from \"./Firebase\";\nimport {\n  ref,\n  uploadBytes,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"firebase/storage\";\nimport { useRef, useState } from \"react\";\nimport { color } from \"framer-motion\";\n\nexport const Uploadimage = ({ name, imgurl }) => {\n  const [image, setimage] = useState(null);\n\n  console.log(\"name in image\", name);\n\n  // Create a storage reference from our storage service\n  // const storageRef = ref(storage, `images/${name}`);\n  const storageRef = ref(storage, `images/${name}`);\n\n  function upload() {\n    console.log(\"Upload image started!\");\n    if (image == null) {\n      return;\n    }\n    uploadBytes(storageRef, image).then(\n      (snapshot) => {\n        console.log(\"Uploaded image!\");\n        console.log(\"snapshot\", snapshot);\n        getDownloadURL(snapshot.ref).then((downloadURL) => {\n          console.log(\"File available at\", downloadURL);\n          imgurl(downloadURL);\n        });\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n        console.log(\"error\", error);\n      }\n    );\n  }\n\n  return (\n    <InputGroup>\n      <Input\n        type=\"file\"\n        onChange={(e) => {\n          setimage(e.target.files[0]);\n          //uploadImage();\n        }}\n      />\n      <Button colorScheme=\"teal\" onClick={upload}>\n        upload\n      </Button>\n    </InputGroup>\n  );\n};\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,UAAU,QAAQ,kBAAkB;AAC5D,SAASC,OAAO,QAAQ,YAAY;AACpC,SACEC,GAAG,EACHC,WAAW,EACXC,oBAAoB,EACpBC,cAAc,QACT,kBAAkB;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,SAASC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCU,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,IAAI,CAAC;;EAElC;EACA;EACA,MAAMO,UAAU,GAAGjB,GAAG,CAACD,OAAO,EAAG,UAASW,IAAK,EAAC,CAAC;EAEjD,SAASQ,MAAMA,CAAA,EAAG;IAChBH,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAIH,KAAK,IAAI,IAAI,EAAE;MACjB;IACF;IACAZ,WAAW,CAACgB,UAAU,EAAEJ,KAAK,CAAC,CAACM,IAAI,CAChCC,QAAQ,IAAK;MACZL,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEI,QAAQ,CAAC;MACjCjB,cAAc,CAACiB,QAAQ,CAACpB,GAAG,CAAC,CAACmB,IAAI,CAAEE,WAAW,IAAK;QACjDN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEK,WAAW,CAAC;QAC7CV,MAAM,CAACU,WAAW,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,EACAC,KAAK,IAAK;MACT;MACAP,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEM,KAAK,CAAC;IAC7B,CACF,CAAC;EACH;EAEA,oBACEd,OAAA,CAACV,UAAU;IAAAyB,QAAA,gBACTf,OAAA,CAACX,KAAK;MACJ2B,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAGC,CAAC,IAAK;QACfZ,QAAQ,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3B;MACF;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFxB,OAAA,CAACZ,MAAM;MAACqC,WAAW,EAAC,MAAM;MAACC,OAAO,EAAEhB,MAAO;MAAAK,QAAA,EAAC;IAE5C;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEjB,CAAC;AAACpB,EAAA,CA5CWH,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}