{"ast":null,"code":"var _jsxFileName = \"/Users/praneetheraganaboina/Desktop/Learnings/AiAssistedInventoryManagement/src/components/Stores.js\",\n  _s = $RefreshSig$();\n// import {\n//   Button,\n//   Input,\n//   InputGroup,\n//   InputLeftAddon,\n//   Stack,\n// } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useState } from \"react\";\n// import StoresStyle from \"./Stores.module.css\";\n// import { Navbar } from \"./Navbar\";\n// import { useLocation } from \"react-router-dom\";\n\n// export function Stores({ setload }) {\n//   const location = useLocation();\n//   const [locationName, setLocationName] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [zipcode, setZipcode] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(() => {\n//     const loggedInUser = localStorage.getItem(\"authenticated\");\n//     console.log(\"loggedin\", location.state.name);\n\n//     if (loggedInUser) {\n//       setauthenticated(loggedInUser);\n//     } else {\n//       navigate(\"/\", { replace: true });\n//     }\n//     const fetchData = async () => {\n//       try {\n//         const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n//         console.log(\"result=\", res);\n//         setsearch(res.data);\n//         response.current = res.data;\n//         console.log(\"response=\", res.data);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     };\n//   const addLocation = async () => {\n//     const date = new Date().toISOString().split(\"T\")[0]; // Format YYYY-MM-DD\n\n//     const locationData = {\n//       locationName,\n//       address,\n//       city,\n//       zipcode,\n//       createdDate: date,\n//       addedBy: \"Admin\",\n//     };\n\n//     try {\n//       setIsLoading(true);\n//       const response = await axios.post(\n//         \"http://127.0.0.1:5000/addLocation\",\n//         locationData\n//       );\n//       console.log(\"Location added:\", response.data);\n//       setload(true);\n//       setIsLoading(false);\n//     } catch (e) {\n//       console.log(\"New location cannot be added\", e);\n//       setIsLoading(false);\n//       alert(\"Error: Location could not be added.\");\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className={StoresStyle.content}>\n//         <Navbar name={location.state?.name || \"Guest\"} />\n//         <div className={StoresStyle.locationinput}>\n//           <Stack spacing={4}>\n//             <InputGroup>\n//               <InputLeftAddon children=\"Location Name\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter location name\"\n//                 value={locationName}\n//                 onChange={(e) => setLocationName(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Address\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter address\"\n//                 value={address}\n//                 onChange={(e) => setAddress(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"City\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter city\"\n//                 value={city}\n//                 onChange={(e) => setCity(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Zipcode\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter zipcode\"\n//                 value={zipcode}\n//                 onChange={(e) => setZipcode(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <Button\n//               colorScheme=\"teal\"\n//               onClick={addLocation}\n//               isLoading={isLoading}\n//               isDisabled={!locationName || !address || !city || !zipcode}\n//             >\n//               Add Location\n//             </Button>\n//           </Stack>\n//         </div>\n//         <div className={dashboardStyle.itemsmod}>\n//         {search.map((data) => {\n//           // console.log(\"data=\", data.id);\n//           // console.log(\"data=\", data);\n//           return (\n//             <LocationDisplay\n//               key={data.id}\n//               className={dashboardStyle.item}\n//               props={data}\n//               name={location.state.name}\n//               setload={setload}\n//               load={load}\n//             />\n//           );\n//         })}\n//       </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// -----------------------\n// import {\n//   Button,\n//   Input,\n//   InputGroup,\n//   InputLeftAddon,\n//   Stack,\n// } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useState, useEffect } from \"react\";\n// import StoresStyle from \"./Stores.module.css\";\n// import dashboardStyle from \"./Dashboard.module.css\";\n// import { Navbar } from \"./Navbar\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { LocationDisplay } from \"./LocationDisplay\";\n\n// export function Stores({ setload }) {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const [locationName, setLocationName] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [zipcode, setZipcode] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [search, setSearch] = useState([]);\n//   const [authenticated, setAuthenticated] = useState(false);\n\n//   useEffect(() => {\n//     const loggedInUser = localStorage.getItem(\"authenticated\");\n\n//     if (loggedInUser) {\n//       setAuthenticated(true);\n//     } else {\n//       navigate(\"/\", { replace: true });\n//     }\n\n//     // Fetch all locations\n//     const fetchData = async () => {\n//       try {\n//         const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n//         console.log(\"Fetched locations:\", res.data);\n//         setSearch(res.data);\n//       } catch (e) {\n//         console.log(\"Error fetching locations:\", e);\n//       }\n//     };\n\n//     fetchData();\n//   }, [navigate]);\n\n//   const addLocation = async () => {\n//     const date = new Date().toISOString().split(\"T\")[0]; // Format YYYY-MM-DD\n\n//     const locationData = {\n//       locationName,\n//       address,\n//       city,\n//       zipcode,\n//       createdDate: date,\n//       addedBy: \"Admin\",\n//     };\n\n//     try {\n//       setIsLoading(true);\n//       const response = await axios.post(\n//         \"http://127.0.0.1:5000/addLocation\",\n//         locationData\n//       );\n//       console.log(\"Location added:\", response.data);\n\n//       // Refresh locations after adding a new one\n//       setSearch((prevLocations) => [...prevLocations, locationData]);\n//       //   setload(true);\n\n//       // Reset input fields\n//       setLocationName(\"\");\n//       setAddress(\"\");\n//       setCity(\"\");\n//       setZipcode(\"\");\n//       setIsLoading(false);\n//     } catch (e) {\n//       console.log(\"New location cannot be added\", e);\n//       setIsLoading(false);\n//       alert(\"Error: Location could not be added.\");\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className={StoresStyle.content}>\n//         <Navbar name={location.state?.name || \"Guest\"} />\n//         <div className={StoresStyle.locationinput}>\n//           <Stack spacing={4}>\n//             <InputGroup>\n//               <InputLeftAddon children=\"Location Name\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter location name\"\n//                 value={locationName}\n//                 onChange={(e) => setLocationName(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Address\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter address\"\n//                 value={address}\n//                 onChange={(e) => setAddress(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"City\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter city\"\n//                 value={city}\n//                 onChange={(e) => setCity(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Zipcode\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter zipcode\"\n//                 value={zipcode}\n//                 onChange={(e) => setZipcode(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <Button\n//               colorScheme=\"teal\"\n//               onClick={addLocation}\n//               isLoading={isLoading}\n//               isDisabled={!locationName || !address || !city || !zipcode}\n//             >\n//               Add Location\n//             </Button>\n//           </Stack>\n//         </div>\n\n//         {/* Display list of locations */}\n//         <div className={dashboardStyle.itemsmod}>\n//           {search.map((data, index) => (\n//             <LocationDisplay\n//               key={index}\n//               className={dashboardStyle.item}\n//               props={data}\n//               name={location.state?.name}\n//               //   setload={setload}\n//             />\n//           ))}\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n//-----------------\nimport { Button, Input, InputGroup, InputLeftAddon, Stack } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport StoresStyle from \"./Stores.module.css\";\nimport dashboardStyle from \"./Dashboard.module.css\";\nimport { Navbar } from \"./Navbar\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { LocationDisplay } from \"./LocationDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Stores({\n  setload\n}) {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [locationName, setLocationName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [zipcode, setZipcode] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [search, setSearch] = useState([]);\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"authenticated\");\n    if (loggedInUser) {\n      setAuthenticated(true);\n    } else {\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n\n    // Fetch all locations\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n        console.log(\"Fetched locations:\", res.data);\n        setSearch(res.data);\n      } catch (e) {\n        console.log(\"Error fetching locations:\", e);\n      }\n    };\n    fetchData();\n  }, [navigate]);\n  const fetchLocations = async () => {\n    try {\n      const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n      console.log(\"Fetched locations after delete:\", res.data);\n      setSearch(res.data);\n    } catch (e) {\n      console.log(\"Error fetching locations:\", e);\n    }\n  };\n  const addLocation = async () => {\n    const date = new Date().toISOString().split(\"T\")[0]; // Format YYYY-MM-DD\n\n    const locationData = {\n      locationName,\n      address,\n      city,\n      zipcode,\n      createdDate: date,\n      addedBy: \"Admin\"\n    };\n    try {\n      setIsLoading(true);\n      const response = await axios.post(\"http://127.0.0.1:5000/addLocation\", locationData);\n      console.log(\"Location added:\", response.data);\n      fetchLocations(); // Refresh locations after adding a new one\n      setload(true);\n\n      // Reset input fields\n      setLocationName(\"\");\n      setAddress(\"\");\n      setCity(\"\");\n      setZipcode(\"\");\n      setIsLoading(false);\n    } catch (e) {\n      console.log(\"New location cannot be added\", e);\n      setIsLoading(false);\n      alert(\"Error: Location could not be added.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: StoresStyle.content,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        name: ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.name) || \"Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: StoresStyle.locationinput,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n              children: \"Location Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Enter location name\",\n              value: locationName,\n              onChange: e => setLocationName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Enter address\",\n              value: address,\n              onChange: e => setAddress(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Enter city\",\n              value: city,\n              onChange: e => setCity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n              children: \"Zipcode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Enter zipcode\",\n              value: zipcode,\n              onChange: e => setZipcode(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"teal\",\n            onClick: addLocation,\n            isLoading: isLoading,\n            isDisabled: !locationName || !address || !city || !zipcode,\n            children: \"Add Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: dashboardStyle.itemsmod,\n        children: search.map((data, index) => {\n          var _location$state2;\n          return /*#__PURE__*/_jsxDEV(LocationDisplay, {\n            className: dashboardStyle.item,\n            props: data,\n            name: (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.name,\n            fetchLocations: fetchLocations // Pass the fetch function\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Stores, \"SLZJDVKmKfK8lgoV3JQlw+IfXCQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Stores;\nvar _c;\n$RefreshReg$(_c, \"Stores\");","map":{"version":3,"names":["Button","Input","InputGroup","InputLeftAddon","Stack","axios","useState","useEffect","StoresStyle","dashboardStyle","Navbar","useLocation","useNavigate","LocationDisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","Stores","setload","_s","_location$state","location","navigate","locationName","setLocationName","address","setAddress","city","setCity","zipcode","setZipcode","isLoading","setIsLoading","search","setSearch","authenticated","setAuthenticated","loggedInUser","localStorage","getItem","replace","fetchData","res","get","console","log","data","e","fetchLocations","addLocation","date","Date","toISOString","split","locationData","createdDate","addedBy","response","post","alert","children","className","content","name","state","fileName","_jsxFileName","lineNumber","columnNumber","locationinput","spacing","type","placeholder","value","onChange","target","colorScheme","onClick","isDisabled","itemsmod","map","index","_location$state2","item","props","_c","$RefreshReg$"],"sources":["/Users/praneetheraganaboina/Desktop/Learnings/AiAssistedInventoryManagement/src/components/Stores.js"],"sourcesContent":["// import {\n//   Button,\n//   Input,\n//   InputGroup,\n//   InputLeftAddon,\n//   Stack,\n// } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useState } from \"react\";\n// import StoresStyle from \"./Stores.module.css\";\n// import { Navbar } from \"./Navbar\";\n// import { useLocation } from \"react-router-dom\";\n\n// export function Stores({ setload }) {\n//   const location = useLocation();\n//   const [locationName, setLocationName] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [zipcode, setZipcode] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(() => {\n//     const loggedInUser = localStorage.getItem(\"authenticated\");\n//     console.log(\"loggedin\", location.state.name);\n\n//     if (loggedInUser) {\n//       setauthenticated(loggedInUser);\n//     } else {\n//       navigate(\"/\", { replace: true });\n//     }\n//     const fetchData = async () => {\n//       try {\n//         const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n//         console.log(\"result=\", res);\n//         setsearch(res.data);\n//         response.current = res.data;\n//         console.log(\"response=\", res.data);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     };\n//   const addLocation = async () => {\n//     const date = new Date().toISOString().split(\"T\")[0]; // Format YYYY-MM-DD\n\n//     const locationData = {\n//       locationName,\n//       address,\n//       city,\n//       zipcode,\n//       createdDate: date,\n//       addedBy: \"Admin\",\n//     };\n\n//     try {\n//       setIsLoading(true);\n//       const response = await axios.post(\n//         \"http://127.0.0.1:5000/addLocation\",\n//         locationData\n//       );\n//       console.log(\"Location added:\", response.data);\n//       setload(true);\n//       setIsLoading(false);\n//     } catch (e) {\n//       console.log(\"New location cannot be added\", e);\n//       setIsLoading(false);\n//       alert(\"Error: Location could not be added.\");\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className={StoresStyle.content}>\n//         <Navbar name={location.state?.name || \"Guest\"} />\n//         <div className={StoresStyle.locationinput}>\n//           <Stack spacing={4}>\n//             <InputGroup>\n//               <InputLeftAddon children=\"Location Name\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter location name\"\n//                 value={locationName}\n//                 onChange={(e) => setLocationName(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Address\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter address\"\n//                 value={address}\n//                 onChange={(e) => setAddress(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"City\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter city\"\n//                 value={city}\n//                 onChange={(e) => setCity(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Zipcode\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter zipcode\"\n//                 value={zipcode}\n//                 onChange={(e) => setZipcode(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <Button\n//               colorScheme=\"teal\"\n//               onClick={addLocation}\n//               isLoading={isLoading}\n//               isDisabled={!locationName || !address || !city || !zipcode}\n//             >\n//               Add Location\n//             </Button>\n//           </Stack>\n//         </div>\n//         <div className={dashboardStyle.itemsmod}>\n//         {search.map((data) => {\n//           // console.log(\"data=\", data.id);\n//           // console.log(\"data=\", data);\n//           return (\n//             <LocationDisplay\n//               key={data.id}\n//               className={dashboardStyle.item}\n//               props={data}\n//               name={location.state.name}\n//               setload={setload}\n//               load={load}\n//             />\n//           );\n//         })}\n//       </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// -----------------------\n// import {\n//   Button,\n//   Input,\n//   InputGroup,\n//   InputLeftAddon,\n//   Stack,\n// } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useState, useEffect } from \"react\";\n// import StoresStyle from \"./Stores.module.css\";\n// import dashboardStyle from \"./Dashboard.module.css\";\n// import { Navbar } from \"./Navbar\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { LocationDisplay } from \"./LocationDisplay\";\n\n// export function Stores({ setload }) {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const [locationName, setLocationName] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [zipcode, setZipcode] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [search, setSearch] = useState([]);\n//   const [authenticated, setAuthenticated] = useState(false);\n\n//   useEffect(() => {\n//     const loggedInUser = localStorage.getItem(\"authenticated\");\n\n//     if (loggedInUser) {\n//       setAuthenticated(true);\n//     } else {\n//       navigate(\"/\", { replace: true });\n//     }\n\n//     // Fetch all locations\n//     const fetchData = async () => {\n//       try {\n//         const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n//         console.log(\"Fetched locations:\", res.data);\n//         setSearch(res.data);\n//       } catch (e) {\n//         console.log(\"Error fetching locations:\", e);\n//       }\n//     };\n\n//     fetchData();\n//   }, [navigate]);\n\n//   const addLocation = async () => {\n//     const date = new Date().toISOString().split(\"T\")[0]; // Format YYYY-MM-DD\n\n//     const locationData = {\n//       locationName,\n//       address,\n//       city,\n//       zipcode,\n//       createdDate: date,\n//       addedBy: \"Admin\",\n//     };\n\n//     try {\n//       setIsLoading(true);\n//       const response = await axios.post(\n//         \"http://127.0.0.1:5000/addLocation\",\n//         locationData\n//       );\n//       console.log(\"Location added:\", response.data);\n\n//       // Refresh locations after adding a new one\n//       setSearch((prevLocations) => [...prevLocations, locationData]);\n//       //   setload(true);\n\n//       // Reset input fields\n//       setLocationName(\"\");\n//       setAddress(\"\");\n//       setCity(\"\");\n//       setZipcode(\"\");\n//       setIsLoading(false);\n//     } catch (e) {\n//       console.log(\"New location cannot be added\", e);\n//       setIsLoading(false);\n//       alert(\"Error: Location could not be added.\");\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className={StoresStyle.content}>\n//         <Navbar name={location.state?.name || \"Guest\"} />\n//         <div className={StoresStyle.locationinput}>\n//           <Stack spacing={4}>\n//             <InputGroup>\n//               <InputLeftAddon children=\"Location Name\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter location name\"\n//                 value={locationName}\n//                 onChange={(e) => setLocationName(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Address\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter address\"\n//                 value={address}\n//                 onChange={(e) => setAddress(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"City\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter city\"\n//                 value={city}\n//                 onChange={(e) => setCity(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <InputGroup>\n//               <InputLeftAddon children=\"Zipcode\" />\n//               <Input\n//                 type=\"text\"\n//                 placeholder=\"Enter zipcode\"\n//                 value={zipcode}\n//                 onChange={(e) => setZipcode(e.target.value)}\n//               />\n//             </InputGroup>\n\n//             <Button\n//               colorScheme=\"teal\"\n//               onClick={addLocation}\n//               isLoading={isLoading}\n//               isDisabled={!locationName || !address || !city || !zipcode}\n//             >\n//               Add Location\n//             </Button>\n//           </Stack>\n//         </div>\n\n//         {/* Display list of locations */}\n//         <div className={dashboardStyle.itemsmod}>\n//           {search.map((data, index) => (\n//             <LocationDisplay\n//               key={index}\n//               className={dashboardStyle.item}\n//               props={data}\n//               name={location.state?.name}\n//               //   setload={setload}\n//             />\n//           ))}\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n//-----------------\nimport {\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  Stack,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport StoresStyle from \"./Stores.module.css\";\nimport dashboardStyle from \"./Dashboard.module.css\";\nimport { Navbar } from \"./Navbar\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { LocationDisplay } from \"./LocationDisplay\";\n\nexport function Stores({ setload }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [locationName, setLocationName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [zipcode, setZipcode] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [search, setSearch] = useState([]);\n  const [authenticated, setAuthenticated] = useState(false);\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"authenticated\");\n\n    if (loggedInUser) {\n      setAuthenticated(true);\n    } else {\n      navigate(\"/\", { replace: true });\n    }\n\n    // Fetch all locations\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n        console.log(\"Fetched locations:\", res.data);\n        setSearch(res.data);\n      } catch (e) {\n        console.log(\"Error fetching locations:\", e);\n      }\n    };\n\n    fetchData();\n  }, [navigate]);\n\n  const fetchLocations = async () => {\n    try {\n      const res = await axios.get(\"http://127.0.0.1:5000/getLocation\");\n      console.log(\"Fetched locations after delete:\", res.data);\n      setSearch(res.data);\n    } catch (e) {\n      console.log(\"Error fetching locations:\", e);\n    }\n  };\n\n  const addLocation = async () => {\n    const date = new Date().toISOString().split(\"T\")[0]; // Format YYYY-MM-DD\n\n    const locationData = {\n      locationName,\n      address,\n      city,\n      zipcode,\n      createdDate: date,\n      addedBy: \"Admin\",\n    };\n\n    try {\n      setIsLoading(true);\n      const response = await axios.post(\n        \"http://127.0.0.1:5000/addLocation\",\n        locationData\n      );\n      console.log(\"Location added:\", response.data);\n      fetchLocations(); // Refresh locations after adding a new one\n      setload(true);\n\n      // Reset input fields\n      setLocationName(\"\");\n      setAddress(\"\");\n      setCity(\"\");\n      setZipcode(\"\");\n      setIsLoading(false);\n    } catch (e) {\n      console.log(\"New location cannot be added\", e);\n      setIsLoading(false);\n      alert(\"Error: Location could not be added.\");\n    }\n  };\n\n  return (\n    <>\n      <div className={StoresStyle.content}>\n        <Navbar name={location.state?.name || \"Guest\"} />\n        <div className={StoresStyle.locationinput}>\n          <Stack spacing={4}>\n            <InputGroup>\n              <InputLeftAddon children=\"Location Name\" />\n              <Input\n                type=\"text\"\n                placeholder=\"Enter location name\"\n                value={locationName}\n                onChange={(e) => setLocationName(e.target.value)}\n              />\n            </InputGroup>\n\n            <InputGroup>\n              <InputLeftAddon children=\"Address\" />\n              <Input\n                type=\"text\"\n                placeholder=\"Enter address\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n              />\n            </InputGroup>\n\n            <InputGroup>\n              <InputLeftAddon children=\"City\" />\n              <Input\n                type=\"text\"\n                placeholder=\"Enter city\"\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n              />\n            </InputGroup>\n\n            <InputGroup>\n              <InputLeftAddon children=\"Zipcode\" />\n              <Input\n                type=\"text\"\n                placeholder=\"Enter zipcode\"\n                value={zipcode}\n                onChange={(e) => setZipcode(e.target.value)}\n              />\n            </InputGroup>\n\n            <Button\n              colorScheme=\"teal\"\n              onClick={addLocation}\n              isLoading={isLoading}\n              isDisabled={!locationName || !address || !city || !zipcode}\n            >\n              Add Location\n            </Button>\n          </Stack>\n        </div>\n\n        {/* Display list of locations */}\n        <div className={dashboardStyle.itemsmod}>\n          {search.map((data, index) => (\n            <LocationDisplay\n              key={index}\n              className={dashboardStyle.item}\n              props={data}\n              name={location.state?.name}\n              fetchLocations={fetchLocations} // Pass the fetch function\n            />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACEA,MAAM,EACNC,KAAK,EACLC,UAAU,EACVC,cAAc,EACdC,KAAK,QACA,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,cAAc,MAAM,wBAAwB;AACnD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,OAAO,SAASC,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAClC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4B,MAAM,EAAEC,SAAS,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACd,MAAM+B,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAE1D,IAAIF,YAAY,EAAE;MAChBD,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,MAAM;MACLd,QAAQ,CAAC,GAAG,EAAE;QAAEkB,OAAO,EAAE;MAAK,CAAC,CAAC;IAClC;;IAEA;IACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAC,mCAAmC,CAAC;QAChEC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,GAAG,CAACI,IAAI,CAAC;QAC3CZ,SAAS,CAACQ,GAAG,CAACI,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEE,CAAC,CAAC;MAC7C;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC;EAEd,MAAM0B,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMN,GAAG,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAC,mCAAmC,CAAC;MAChEC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEH,GAAG,CAACI,IAAI,CAAC;MACxDZ,SAAS,CAACQ,GAAG,CAACI,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEE,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAErD,MAAMC,YAAY,GAAG;MACnB/B,YAAY;MACZE,OAAO;MACPE,IAAI;MACJE,OAAO;MACP0B,WAAW,EAAEL,IAAI;MACjBM,OAAO,EAAE;IACX,CAAC;IAED,IAAI;MACFxB,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMyB,QAAQ,GAAG,MAAMrD,KAAK,CAACsD,IAAI,CAC/B,mCAAmC,EACnCJ,YACF,CAAC;MACDV,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEY,QAAQ,CAACX,IAAI,CAAC;MAC7CE,cAAc,CAAC,CAAC,CAAC,CAAC;MAClB9B,OAAO,CAAC,IAAI,CAAC;;MAEb;MACAM,eAAe,CAAC,EAAE,CAAC;MACnBE,UAAU,CAAC,EAAE,CAAC;MACdE,OAAO,CAAC,EAAE,CAAC;MACXE,UAAU,CAAC,EAAE,CAAC;MACdE,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOe,CAAC,EAAE;MACVH,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEE,CAAC,CAAC;MAC9Cf,YAAY,CAAC,KAAK,CAAC;MACnB2B,KAAK,CAAC,qCAAqC,CAAC;IAC9C;EACF,CAAC;EAED,oBACE7C,OAAA,CAAAE,SAAA;IAAA4C,QAAA,eACE9C,OAAA;MAAK+C,SAAS,EAAEtD,WAAW,CAACuD,OAAQ;MAAAF,QAAA,gBAClC9C,OAAA,CAACL,MAAM;QAACsD,IAAI,EAAE,EAAA3C,eAAA,GAAAC,QAAQ,CAAC2C,KAAK,cAAA5C,eAAA,uBAAdA,eAAA,CAAgB2C,IAAI,KAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDtD,OAAA;QAAK+C,SAAS,EAAEtD,WAAW,CAAC8D,aAAc;QAAAT,QAAA,eACxC9C,OAAA,CAACX,KAAK;UAACmE,OAAO,EAAE,CAAE;UAAAV,QAAA,gBAChB9C,OAAA,CAACb,UAAU;YAAA2D,QAAA,gBACT9C,OAAA,CAACZ,cAAc;cAAC0D,QAAQ,EAAC;YAAe;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC3CtD,OAAA,CAACd,KAAK;cACJuE,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,qBAAqB;cACjCC,KAAK,EAAElD,YAAa;cACpBmD,QAAQ,EAAG3B,CAAC,IAAKvB,eAAe,CAACuB,CAAC,CAAC4B,MAAM,CAACF,KAAK;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eAEbtD,OAAA,CAACb,UAAU;YAAA2D,QAAA,gBACT9C,OAAA,CAACZ,cAAc;cAAC0D,QAAQ,EAAC;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACrCtD,OAAA,CAACd,KAAK;cACJuE,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,eAAe;cAC3BC,KAAK,EAAEhD,OAAQ;cACfiD,QAAQ,EAAG3B,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAAC4B,MAAM,CAACF,KAAK;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eAEbtD,OAAA,CAACb,UAAU;YAAA2D,QAAA,gBACT9C,OAAA,CAACZ,cAAc;cAAC0D,QAAQ,EAAC;YAAM;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAClCtD,OAAA,CAACd,KAAK;cACJuE,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,YAAY;cACxBC,KAAK,EAAE9C,IAAK;cACZ+C,QAAQ,EAAG3B,CAAC,IAAKnB,OAAO,CAACmB,CAAC,CAAC4B,MAAM,CAACF,KAAK;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eAEbtD,OAAA,CAACb,UAAU;YAAA2D,QAAA,gBACT9C,OAAA,CAACZ,cAAc;cAAC0D,QAAQ,EAAC;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACrCtD,OAAA,CAACd,KAAK;cACJuE,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,eAAe;cAC3BC,KAAK,EAAE5C,OAAQ;cACf6C,QAAQ,EAAG3B,CAAC,IAAKjB,UAAU,CAACiB,CAAC,CAAC4B,MAAM,CAACF,KAAK;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eAEbtD,OAAA,CAACf,MAAM;YACL6E,WAAW,EAAC,MAAM;YAClBC,OAAO,EAAE5B,WAAY;YACrBlB,SAAS,EAAEA,SAAU;YACrB+C,UAAU,EAAE,CAACvD,YAAY,IAAI,CAACE,OAAO,IAAI,CAACE,IAAI,IAAI,CAACE,OAAQ;YAAA+B,QAAA,EAC5D;UAED;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAGNtD,OAAA;QAAK+C,SAAS,EAAErD,cAAc,CAACuE,QAAS;QAAAnB,QAAA,EACrC3B,MAAM,CAAC+C,GAAG,CAAC,CAAClC,IAAI,EAAEmC,KAAK;UAAA,IAAAC,gBAAA;UAAA,oBACtBpE,OAAA,CAACF,eAAe;YAEdiD,SAAS,EAAErD,cAAc,CAAC2E,IAAK;YAC/BC,KAAK,EAAEtC,IAAK;YACZiB,IAAI,GAAAmB,gBAAA,GAAE7D,QAAQ,CAAC2C,KAAK,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBnB,IAAK;YAC3Bf,cAAc,EAAEA,cAAe,CAAC;UAAA,GAJ3BiC,KAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKX,CAAC;QAAA,CACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACjD,EAAA,CAvJeF,MAAM;EAAA,QACHP,WAAW,EACXC,WAAW;AAAA;AAAA0E,EAAA,GAFdpE,MAAM;AAAA,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}